// Code generated by protoc-gen-go. DO NOT EDIT.
// source: db.proto

/*
Package db is a generated protocol buffer package.

It is generated from these files:
	db.proto

It has these top-level messages:
	GetCreatureRequest
	GetCreatureReply
	SaveCreatureReply
	SaveCreatureRequest
*/
package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetCreatureRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetCreatureRequest) Reset()                    { *m = GetCreatureRequest{} }
func (m *GetCreatureRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCreatureRequest) ProtoMessage()               {}
func (*GetCreatureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetCreatureRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetCreatureReply struct {
	Parents []uint64           `protobuf:"varint,1,rep,packed,name=parents" json:"parents,omitempty"`
	Values  map[string]float64 `protobuf:"bytes,2,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
}

func (m *GetCreatureReply) Reset()                    { *m = GetCreatureReply{} }
func (m *GetCreatureReply) String() string            { return proto.CompactTextString(m) }
func (*GetCreatureReply) ProtoMessage()               {}
func (*GetCreatureReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetCreatureReply) GetParents() []uint64 {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *GetCreatureReply) GetValues() map[string]float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type SaveCreatureReply struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *SaveCreatureReply) Reset()                    { *m = SaveCreatureReply{} }
func (m *SaveCreatureReply) String() string            { return proto.CompactTextString(m) }
func (*SaveCreatureReply) ProtoMessage()               {}
func (*SaveCreatureReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SaveCreatureReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SaveCreatureRequest struct {
	Parents []uint64           `protobuf:"varint,1,rep,packed,name=parents" json:"parents,omitempty"`
	Values  map[string]float64 `protobuf:"bytes,2,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
}

func (m *SaveCreatureRequest) Reset()                    { *m = SaveCreatureRequest{} }
func (m *SaveCreatureRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveCreatureRequest) ProtoMessage()               {}
func (*SaveCreatureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SaveCreatureRequest) GetParents() []uint64 {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *SaveCreatureRequest) GetValues() map[string]float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*GetCreatureRequest)(nil), "db.GetCreatureRequest")
	proto.RegisterType((*GetCreatureReply)(nil), "db.GetCreatureReply")
	proto.RegisterType((*SaveCreatureReply)(nil), "db.SaveCreatureReply")
	proto.RegisterType((*SaveCreatureRequest)(nil), "db.SaveCreatureRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Db service

type DbClient interface {
	GetCreature(ctx context.Context, in *GetCreatureRequest, opts ...grpc.CallOption) (*GetCreatureReply, error)
	SaveCreature(ctx context.Context, in *SaveCreatureRequest, opts ...grpc.CallOption) (*SaveCreatureReply, error)
}

type dbClient struct {
	cc *grpc.ClientConn
}

func NewDbClient(cc *grpc.ClientConn) DbClient {
	return &dbClient{cc}
}

func (c *dbClient) GetCreature(ctx context.Context, in *GetCreatureRequest, opts ...grpc.CallOption) (*GetCreatureReply, error) {
	out := new(GetCreatureReply)
	err := grpc.Invoke(ctx, "/db.Db/GetCreature", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dbClient) SaveCreature(ctx context.Context, in *SaveCreatureRequest, opts ...grpc.CallOption) (*SaveCreatureReply, error) {
	out := new(SaveCreatureReply)
	err := grpc.Invoke(ctx, "/db.Db/SaveCreature", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Db service

type DbServer interface {
	GetCreature(context.Context, *GetCreatureRequest) (*GetCreatureReply, error)
	SaveCreature(context.Context, *SaveCreatureRequest) (*SaveCreatureReply, error)
}

func RegisterDbServer(s *grpc.Server, srv DbServer) {
	s.RegisterService(&_Db_serviceDesc, srv)
}

func _Db_GetCreature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCreatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbServer).GetCreature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Db/GetCreature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbServer).GetCreature(ctx, req.(*GetCreatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Db_SaveCreature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveCreatureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbServer).SaveCreature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Db/SaveCreature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbServer).SaveCreature(ctx, req.(*SaveCreatureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Db_serviceDesc = grpc.ServiceDesc{
	ServiceName: "db.Db",
	HandlerType: (*DbServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCreature",
			Handler:    _Db_GetCreature_Handler,
		},
		{
			MethodName: "SaveCreature",
			Handler:    _Db_SaveCreature_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "db.proto",
}

func init() { proto.RegisterFile("db.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x48, 0x49, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4a, 0x49, 0x52, 0x52, 0xe1, 0x12, 0x72, 0x4f, 0x2d, 0x71,
	0x2e, 0x4a, 0x4d, 0x2c, 0x29, 0x2d, 0x4a, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2,
	0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x09, 0x62, 0xca, 0x4c, 0x51, 0x5a,
	0xc8, 0xc8, 0x25, 0x80, 0xa2, 0xac, 0x20, 0xa7, 0x52, 0x48, 0x82, 0x8b, 0xbd, 0x20, 0xb1, 0x28,
	0x35, 0xaf, 0xa4, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0x25, 0x08, 0xc6, 0x15, 0xb2, 0xe0, 0x62,
	0x2b, 0x4b, 0xcc, 0x29, 0x4d, 0x2d, 0x96, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd0, 0x4b,
	0x49, 0xd2, 0x43, 0xd7, 0xaf, 0x17, 0x06, 0x56, 0xe2, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0x55,
	0x2f, 0x65, 0xc9, 0xc5, 0x8d, 0x24, 0x2c, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0x76, 0x08,
	0x67, 0x10, 0x88, 0x29, 0x24, 0xc2, 0xc5, 0x0a, 0x56, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x18,
	0x04, 0xe1, 0x58, 0x31, 0x59, 0x30, 0x2a, 0x29, 0x73, 0x09, 0x06, 0x27, 0x96, 0xa5, 0xa2, 0xba,
	0x11, 0xdd, 0x23, 0xcb, 0x19, 0xb9, 0x84, 0x51, 0x55, 0x41, 0x3c, 0x8c, 0xdb, 0x2f, 0xd6, 0x68,
	0x7e, 0x51, 0x06, 0xf9, 0x05, 0x8b, 0x11, 0x54, 0xf6, 0x8e, 0x51, 0x2b, 0x23, 0x17, 0x93, 0x4b,
	0x92, 0x90, 0x2d, 0x17, 0x37, 0x52, 0xc0, 0x09, 0x89, 0x61, 0x84, 0x24, 0xd8, 0x72, 0x29, 0x11,
	0x6c, 0x21, 0xac, 0xc4, 0x20, 0xe4, 0xc0, 0xc5, 0x83, 0xec, 0x56, 0x21, 0x71, 0x1c, 0xae, 0x97,
	0x12, 0xc5, 0x94, 0x00, 0x9b, 0x90, 0xc4, 0x06, 0x4e, 0x2b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x82, 0xb3, 0xf0, 0xb6, 0x37, 0x02, 0x00, 0x00,
}
